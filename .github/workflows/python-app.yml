# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main, develop, feature/*, release/* ]
  pull_request:
    branches: [ main, develop, feature/*, release/* ]
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy
        if [ -f testrequirements.txt ]; then pip install -r testrequirements.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # The GitHub editor is 127 chars wide
        flake8 hpcrocket --count --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check type annotations with mypy --strict
      run: |
        mypy --install-types --non-interactive hpcrocket
        mypy --strict hpcrocket
    
    - name: Test with pytest
      run: |
         pytest --cov=. --cov-report=xml test/

    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: coverage.xml


  sonarcloud:
    name: SonarCloud
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Download coverage report
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
